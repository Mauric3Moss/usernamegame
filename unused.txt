/*
// Commented out Plinko game code
function getRandom() {
  return Math.random() < 0.5 ? -1 : 1;
}

function startPlinko() {
  const wordInput = document.getElementById("wordInput").value.toLowerCase();
  if (wordInput === "username") {
    const letters = wordInput.split('');
    const plinkoBoard = document.getElementById("plinkoBoard");

    letters.forEach((letter, index) => {
      const letterElement = document.createElement("div");
      letterElement.textContent = letter;
      letterElement.classList.add("letter");
      letterElement.style.setProperty('--left', (index * 10) + 5);
      letterElement.style.animationDelay = `${Math.random() * 5}s`;
      plinkoBoard.appendChild(letterElement);
    });

    const pegElements = document.querySelectorAll(".peg");
    pegElements.forEach((peg, index) => {
      peg.style.setProperty('--left', (index * 15) + 5);
      peg.style.setProperty('--top', Math.floor(Math.random() * 80) + 10);
    });

    const letterElements = document.querySelectorAll('.letter');
    letterElements.forEach(letter => {
      letter.addEventListener('animationiteration', handleLetterBounce);
    });

    setTimeout(() => {
      const scrambledLetters = Array.from(letterElements).map(letter => letter.textContent);
      const scrambledWord = scrambledLetters.join('');
      document.getElementById("scrambledOutput").textContent = scrambledWord;

      if (scrambledWord.toLowerCase() === wordInput) {
        alert("Correct! The word matches.");
        // Add logic to proceed to game 3
      } else {
        alert("Incorrect. Please try again.");
      }
    }, 3000);
  } else {
    alert("Please enter the word 'username'.");
  }
}

function handleLetterBounce(event) {
  const letterElement = event.target;
  const pegElements = document.elementsFromPoint(event.clientX, event.clientY);
  const pegElement = pegElements.find(element => element.classList.contains('peg'));

  if (pegElement) {
    const pegRect = pegElement.getBoundingClientRect();
    const letterRect = letterElement.getBoundingClientRect();

    if (letterRect.right > pegRect.left && letterRect.left < pegRect.right) {
      if (letterRect.top < pegRect.bottom) {
        letterElement.style.left = `${parseInt(letterElement.style.left) + getRandom() * 5}%`;
      } else {
        letterElement.style.left = `${parseInt(letterElement.style.left) + getRandom() * 5}%`;
      }
    }
  }
}
*/



/* Commented out Plinko game styles
#plinkoBoard {
  width: 300px;
  height: 400px;
  border: 1px solid black;
  position: relative;
  overflow: hidden;
}

.peg {
  width: 10px;
  height: 10px;
  background-color: #000;
  border-radius: 50%;
  position: absolute;
  left: calc(var(--left) * 1%);
  top: calc(var(--top) * 1%);
}

.letter {
  font-size: 16px;
  font-weight: bold;
  position: absolute;
  top: 0;
  left: calc(var(--left) * 1%);
  animation: plinko 5s linear forwards;
}

@keyframes plinko {
  0% {
    top: 0;
  }
  100% {
    top: 380px;
  }
}

#scrambledOutput {
  font-size: 24px;
  font-weight: bold;
  margin-top: 20px;
  display: inline-block;
}
*/